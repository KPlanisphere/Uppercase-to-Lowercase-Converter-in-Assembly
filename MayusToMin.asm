.MODEL SMALL     ;DEFINE EL TIPO DE MEMORIA QUE SE UTILIZARA (64KB EN CD Y DS)
.STACK 100h      ;RESERVA 100H BYTES DE ESPACIO DE MEMORIA PARA LA PILA
   
   
.DATA            ;SEGMENTO DE DATOS
MSG DB 100 DUP('$')  ;RESERVA 100 BYTES EN MSG Y LOS LLENA CON "$"
MSG2 DB "ORIGINAL: $"
MSG3 DB "MODIFICADO: $"

.CODE
start:
MOV AX,@DATA
MOV DS,AX   
       
;LIMPIAR PANTALLA
MOV AH, 06H   ; INICIALIZAR VENTANA
MOV AL, 00H   ; 0 = SOBREESCRIBE
MOV BH, 00AH  ; ATRIBUTO DE LAS LINEAS EN BLANCO COLOR (FONDO NEGRO COLOR VERDE)
              ; 1ER. NIBLE COLOR DEL BACKGROUND
              ; 2DO. NIBLE COLOR DEL TEXTO
MOV CX, 00H   ; POSICION INICIAL A BORRAR
MOV DH, 24    ; = FILA - POSICION FINAL A BORRAR
MOV DL, 79    ; = COLUMNA
INT 10H 

MOV AH, 02H   ; SERVICIO DE POSICIONAR EL CURSOR
MOV BH, 0     ; PAGINA ACTUAL
MOV DH, 1     ; = FILA
MOV DL, 0     ; = COLUMNA
INT 10H
       
;TEXTO "ORIGINAL"
LEA DX, MSG2    ;GUARDA LA DIRECCION DE MSG2 EN DX
MOV AH, 9       ;IMPRIME CADENA MSG2
INT 21H
        
;ENTRADA DE CADENA       
LEA SI, MSG     ;GUARDA DIRECCION DE MSG EN SI
        
OTRO:           ; PROCEDIMIENTO SIGUIENTE LETRA
MOV AH,1        ; LEE UN CARACTER (GUARDADO EN AL)
INT 21H
CMP AL,0DH      ; SE COMPARA CON UN "ENTER" EN ASCII (FIN DE CADENA)
JE FIN          ; SALTA HASTA FIN

;CONVERTIR DE MAYUSCULA A MINUSCULA
CMP AL,20H      ; CASO PARA ESPACIOS
JE SIGUIENTE:
CMP AL, 5AH
JG MINUSCULA
ADD AL,20H
JMP SIGUIENTE:

MINUSCULA:
SUB AL,20H

SIGUIENTE:
MOV [SI], AL    ;REASIGNACION DEL VALOR AL EN EL 
                ;CONTENIDO DE LA MEMORIA EN LA DIRECCION [SI]
INC SI

JMP OTRO:

FIN:


MOV AH, 02H  ; SERVICIO DE POSICIONAR EL CURSOR
MOV BH, 0    ; PAGINA ACTUAL
MOV DH, 3    ; = FILA
MOV DL, 0    ; = COLUMNA
INT 10H

;TEXTO "MODIFICADO"                
LEA DX, MSG3
MOV AH, 9
INT 21H
;CADENA MODIFICADA    
LEA DX, MSG
MOV AH, 9
INT 21H    
;FIN EJECUTABLE
MOV	AX, 4C00H  
INT	21H
          
END START